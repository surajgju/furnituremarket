{"version":3,"sources":["hooks.js"],"names":["AsyncStorage","useAsyncStorage","key","getItem","args","setItem","mergeItem","removeItem"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,OAAOA,YAAP,MAAyB,gBAAzB;AAiBA,OAAO,SAASC,eAAT,CAAyBC,GAAzB,EAAwD;AAC7D,SAAO;AACLC,IAAAA,OAAO,EAAE,CAAC,GAAGC,IAAJ,KAAaJ,YAAY,CAACG,OAAb,CAAqBD,GAArB,EAA0B,GAAGE,IAA7B,CADjB;AAELC,IAAAA,OAAO,EAAE,CAAC,GAAGD,IAAJ,KAAaJ,YAAY,CAACK,OAAb,CAAqBH,GAArB,EAA0B,GAAGE,IAA7B,CAFjB;AAGLE,IAAAA,SAAS,EAAE,CAAC,GAAGF,IAAJ,KAAaJ,YAAY,CAACM,SAAb,CAAuBJ,GAAvB,EAA4B,GAAGE,IAA/B,CAHnB;AAILG,IAAAA,UAAU,EAAE,CAAC,GAAGH,IAAJ,KAAaJ,YAAY,CAACO,UAAb,CAAwBL,GAAxB,EAA6B,GAAGE,IAAhC;AAJpB,GAAP;AAMD","sourcesContent":["/**\r\n * @format\r\n * @flow\r\n */\r\n\r\nimport AsyncStorage from './AsyncStorage';\r\n\r\ntype AsyncStorageHook = {\r\n  getItem: (\r\n    callback?: ?(error: ?Error, result: string | null) => void,\r\n  ) => Promise<string | null>,\r\n  setItem: (\r\n    value: string,\r\n    callback?: ?(error: ?Error) => void,\r\n  ) => Promise<null>,\r\n  mergeItem: (\r\n    value: string,\r\n    callback?: ?(error: ?Error) => void,\r\n  ) => Promise<null>,\r\n  removeItem: (callback?: ?(error: ?Error) => void) => Promise<null>,\r\n};\r\n\r\nexport function useAsyncStorage(key: string): AsyncStorageHook {\r\n  return {\r\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\r\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\r\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\r\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\r\n  };\r\n}\r\n"]}